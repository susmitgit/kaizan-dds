// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p9
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:461

#ifndef _TAO_IDL_SIMPLES_VQKHWX_H_
#define _TAO_IDL_SIMPLES_VQKHWX_H_

#include /**/ "ace/pre.h"

#include "simpleC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Fixed_Array_SArgument_T.h"
#include "tao/PortableServer/Var_Array_SArgument_T.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::simple::TestSeqTypedef>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::TestSeqTypedef,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::simple::SeqOfTypedefedLong>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::SeqOfTypedefedLong,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::simple::StringSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::StringSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  template<>
  class SArg_Traits< ::simple::TestArrayTypedef_tag>
    : public
        Fixed_Array_SArg_Traits_T<
            ::simple::TestArrayTypedef_var,
            ::simple::TestArrayTypedef_forany,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  template<>
  class SArg_Traits< ::simple::TestStringArray_tag>
    : public
        Var_Array_SArg_Traits_T<
            ::simple::TestStringArray_out,
            ::simple::TestStringArray_forany,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::simple::StringSeqSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::StringSeqSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::simple::StringSeqSeqSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::StringSeqSeqSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::simple::LongSeqSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::LongSeqSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::simple::LongSeqSeqSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::LongSeqSeqSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::simple::TestStruct>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::TestStruct,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::simple::TestStructSequence>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::TestStructSequence,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  template<>
  class SArg_Traits< ::simple::TestStructArray_tag>
    : public
        Var_Array_SArg_Traits_T<
            ::simple::TestStructArray_out,
            ::simple::TestStructArray_forany,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::simple::TestNestedStruct>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::TestNestedStruct,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:904

  template<>
  class SArg_Traits< ::simple::TestEnum>
    : public
        Basic_SArg_Traits_T<
            ::simple::TestEnum,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1058

  template<>
  class SArg_Traits< ::simple::TestUnion1>
    : public
        Fixed_Size_SArg_Traits_T<
            ::simple::TestUnion1,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1058

  template<>
  class SArg_Traits< ::simple::TestUnion2>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::TestUnion2,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1058

  template<>
  class SArg_Traits< ::simple::TestUnion4>
    : public
        Fixed_Size_SArg_Traits_T<
            ::simple::TestUnion4,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::simple::EnumSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::EnumSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  template<>
  class SArg_Traits< ::simple::EnumArray_tag>
    : public
        Fixed_Array_SArg_Traits_T<
            ::simple::EnumArray_var,
            ::simple::EnumArray_forany,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::simple::TestStructWithEnum>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::TestStructWithEnum,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_SIMPLE_TESTINTERF__SARG_TRAITS_)
#define _SIMPLE_TESTINTERF__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::simple::TestInterf>
    : public
        Object_SArg_Traits_T<
            ::simple::TestInterf_ptr,
            ::simple::TestInterf_var,
            ::simple::TestInterf_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::simple::TestUnion2Seq>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::TestUnion2Seq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1058

  template<>
  class SArg_Traits< ::simple::TestUnion3>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::TestUnion3,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_SIMPLE_TESTINTERF2__SARG_TRAITS_)
#define _SIMPLE_TESTINTERF2__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::simple::TestInterf2>
    : public
        Object_SArg_Traits_T<
            ::simple::TestInterf2_ptr,
            ::simple::TestInterf2_var,
            ::simple::TestInterf2_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_SIMPLE_TESTINTERF3__SARG_TRAITS_)
#define _SIMPLE_TESTINTERF3__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::simple::TestInterf3>
    : public
        Object_SArg_Traits_T<
            ::simple::TestInterf3_ptr,
            ::simple::TestInterf3_var,
            ::simple::TestInterf3_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::simple::Local2Seq>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::Local2Seq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::simple::StructWithObjref>
    : public
        Var_Size_SArg_Traits_T<
            ::simple::StructWithObjref,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:38

namespace POA_simple
{
  

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:76

  class TestInterf;
  typedef TestInterf *TestInterf_ptr;

  class  TestInterf
    : public virtual PortableServer::ServantBase
  {
  protected:
    TestInterf (void);
  
  public:
    /// Useful for template programming.
    typedef ::simple::TestInterf _stub_type;
    typedef ::simple::TestInterf_ptr _stub_ptr_type;
    typedef ::simple::TestInterf_var _stub_var_type;

    TestInterf (const TestInterf& rhs);
    virtual ~TestInterf (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::simple::TestInterf *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:39

    virtual ::simple::TestArrayTypedef_slice * op1 (
      ::simple::TestEnum p1,
      ::CORBA::UShort & p2,
      ::simple::TestSeqTypedef_out p3,
      ::CORBA::String_out p4) = 0;

    static void op1_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:39

    virtual ::simple::TestUnion4 opu (
      const ::simple::TestUnion1 & p1,
      ::simple::TestUnion2 & p2,
      ::simple::TestUnion1_out p4) = 0;

    static void opu_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:39

    virtual ::CORBA::Long attr1 (
      void) = 0;

    static void _get_attr1_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:39

    virtual void attr1 (
      ::CORBA::Long attr1) = 0;

    static void _set_attr1_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:76

  class TestInterf2;
  typedef TestInterf2 *TestInterf2_ptr;

  class  TestInterf2
    : public virtual POA_simple::TestInterf
  {
  protected:
    TestInterf2 (void);
  
  public:
    /// Useful for template programming.
    typedef ::simple::TestInterf2 _stub_type;
    typedef ::simple::TestInterf2_ptr _stub_ptr_type;
    typedef ::simple::TestInterf2_var _stub_var_type;

    TestInterf2 (const TestInterf2& rhs);
    virtual ~TestInterf2 (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::simple::TestInterf2 *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:39

    virtual ::CORBA::Long op2 (
      const ::simple::TestArrayTypedef p1,
      const ::simple::LongSeqSeq & p2) = 0;

    static void op2_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:76

  class TestInterf3;
  typedef TestInterf3 *TestInterf3_ptr;

  class  TestInterf3
    : public virtual POA_simple::TestInterf2
  {
  protected:
    TestInterf3 (void);
  
  public:
    /// Useful for template programming.
    typedef ::simple::TestInterf3 _stub_type;
    typedef ::simple::TestInterf3_ptr _stub_ptr_type;
    typedef ::simple::TestInterf3_var _stub_var_type;

    TestInterf3 (const TestInterf3& rhs);
    virtual ~TestInterf3 (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::simple::TestInterf3 *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:39

    virtual void op3 (
      const ::simple::TestNestedStruct & p1) = 0;

    static void op3_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:69

} // module simple

#include /**/ "ace/post.h"

#endif /* ifndef */

