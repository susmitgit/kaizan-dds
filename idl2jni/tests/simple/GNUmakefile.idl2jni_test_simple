# -*- Makefile -*-
#----------------------------------------------------------------------------
#       GNU Makefile
#
# @file GNUmakefile.idl2jni_test_simple
#
# $Id: gnu.mpd 2179 2013-05-28 22:16:51Z mesnierp $
#
# This file was automatically generated by MPC.  Any changes made directly to
# this file will be lost the next time it is generated.
#
#----------------------------------------------------------------------------
MAKEFILE         = GNUmakefile.idl2jni_test_simple
DEPENDENCY_FILE  = .depend.idl2jni_test_simple

IDL_DEPENDENCY_FILE1 = .depend.idl2jni_test_simple_Idl1

IDL_DEPENDENCY_FILES += \
	.depend.idl2jni_test_simple_Idl1

LIB_PREFIX      ?= lib

## LIB_CHECKED may be set to empty later on in this file
LIB_UNCHECKED    = $(LIB_PREFIX)idl2jni_test_simple.$(LIBEXT)
LIB_CHECKED      = $(LIB_UNCHECKED)
LIB_NAME         = $(LIB_PREFIX)idl2jni_test_simple

## SHLIB may be set to empty later on in this file
SHLIB_UNCHECKED  = $(LIB_PREFIX)idl2jni_test_simple.$(SOEXT)
SHLIB            = $(SHLIB_UNCHECKED)

TAO_ROOT  ?= $(ACE_ROOT)/TAO

FILES = \
  simpleJC.cpp \
  simpleJS.cpp \
  simpleS.cpp \
  simpleC.cpp

IDL_DEPS_FLAGS1 = -DGEN_IDL_MAKE_DEPS
IDL_DEPS1 = simple.idl


#----------------------------------------------------------------------------
#       Include macros and targets
#----------------------------------------------------------------------------
ACE_SHLIBS = -lidl2jni_runtime -lTAO_PortableServer -lTAO_AnyTypeCode -lTAO -lACE
TAO_IDL = $(ACE_ROOT)/bin/tao_idl
TAO_IDL_DEP = $(ACE_ROOT)/bin/tao_idl$(EXEEXT)
TAO_IDLFLAGS = -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT)$(if $(ARCH), -g $(call ADD_QUOTE,$(call ADD_ARCH,$(ACE_ROOT)/bin/ace_gperf)))

PRJ_TYPE = library

COLLAPSE_SLASHES = $(if $(findstring //,$(1)),$(call COLLAPSE_SLASHES,$(subst //,/,$(1))),$(1))
INSLIB ?= $(call COLLAPSE_SLASHES,.)
ifeq ($(INSLIB),.)
  ifeq ($(CURDIR),)
    ifeq ($(PWD),)
      PWD=$(shell pwd)
    endif
  else
    PWD=$(CURDIR)
  endif
  INSLIB = $(PWD)
endif
OUTPUT_DIRECTORY = $(INSLIB)

include $(ACE_ROOT)/include/makeinclude/wrapper_macros.GNU

include $(DDS_ROOT)/rules.dds.GNU

include $(TAO_ROOT)/rules.tao.GNU

GNUACE_PROJECT_VERSION ?= $(ACE_VERSION)

# To build multiple targets in the same directory on AIX, it works
# best to have a template directory per project.
# The compiler/linker isn't too smart about instantiating templates...
ifdef TEMPINCDIR
TEMPINCDIR := $(TEMPINCDIR)/idl2jni_test_simple
all: $(TEMPINCDIR)
endif

ifneq ($(OUTPUT_DIRECTORY),)
.PHONY: create_output_directory.local
all: create_output_directory.local
create_output_directory.local:
	-@$(MKDIR) "$(OUTPUT_DIRECTORY)" $(ACE_NUL_STDERR)
endif

# turn off libcheck if doing a dry run
ifeq ($(findstring n, $(MAKEFLAGS)),n)
  LIBCHECK = 1
else
  # turn off libcheck if keep going was passed too
  ifeq ($(findstring k, $(MAKEFLAGS)),k)
    LIBCHECK = 1
  else
    LIBCHECK ?= $(filter-out $(foreach lib,idl2jni_runtime TAO_PortableServer TAO_AnyTypeCode TAO ACE,$(findstring $(lib),$(foreach libpath,. $(if $(ARCH),./$(ARCH)) $(ACE_ROOT)/lib $(if $(ARCH),$(ACE_ROOT)/lib/$(ARCH)) ../../../../lib $(if $(ARCH),../../../../lib/$(ARCH)) /usr/lib /usr/lib64 $(INSLIB),$(wildcard $(libpath)/$(LIB_PREFIX)$(lib).* $(libpath)/$(lib).lib)))),idl2jni_runtime TAO_PortableServer TAO_AnyTypeCode TAO ACE)
    ifeq ($(LIBCHECK),)
      LIBCHECK = 1
    endif
  endif
endif
ifeq ($(java),1)
ifneq ($(LIBCHECK), 1)
  LIB_CHECKED   =
  SHLIB =
  all: lib_warning
endif
else
  LIB_CHECKED   =
  SHLIB =
  all: require_warning
endif

ifeq ($(java),1)
else
  LIB_CHECKED   =
  SHLIB =
  all: require_warning
endif
LSRC   = $(FILES)

include $(ACE_ROOT)/include/makeinclude/macros.GNU
include $(ACE_ROOT)/include/makeinclude/rules.common.GNU
include $(ACE_ROOT)/include/makeinclude/rules.nonested.GNU
include $(ACE_ROOT)/include/makeinclude/rules.lib.GNU
include $(ACE_ROOT)/include/makeinclude/rules.local.GNU
ifeq ($(VXWORKSLINK),1)
include $(TGT_DIR)/h/make/rules.$(PRJ_TYPE)
endif

ifeq ($(VXWORKSLINK),1)
LDLIBPATH     = -L. -L$(ACE_ROOT)/lib -L../../../../lib
else
LDFLAGS      += -L. $(if $(ARCH),-L./$(ARCH)) -L$(ACE_ROOT)/lib $(if $(ARCH),-L$(ACE_ROOT)/lib/$(ARCH)) -L../../../../lib $(if $(ARCH),-L../../../../lib/$(ARCH))
endif
CPPFLAGS     += -I$(ACE_ROOT) -I$(TAO_ROOT) -I../../../../java/idl2jni/runtime -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/$(JAVA_PLATFORM)
ifeq ($(static_libs),1)
  CPPFLAGS += -DACE_AS_STATIC_LIBS -DTAO_AS_STATIC_LIBS
endif

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------
lib_warning:
	@echo idl2jni_test_simple will not be built due to the following missing library: $(LIBCHECK) >&2

ifneq ($(java),1)
requires_disabled_macros += java
endif
require_warning:
	@echo idl2jni_test_simple will not be built due to the following disabled make macros: $(requires_disabled_macros)>&2

## Some OS's have /bin/test others only have /usr/bin/test
ifeq ($(wildcard /bin/test), /bin/test)
  TEST_EXE = /bin/test
else
ifeq ($(wildcard /usr/bin/test), /usr/bin/test)
  TEST_EXE = /usr/bin/test
endif
endif

SPACE = $(should_be_unset) $(should_be_unset)
DYLD_LIBRARY_PATH := $(DYLD_LIBRARY_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
LD_LIBRARY_PATH   := $(LD_LIBRARY_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
SHLIB_PATH        := $(SHLIB_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
LIBPATH           := $(LIBPATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
PATH              := $(PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))

GENERATED_DIRTY += simpleC.inl simpleS.h simpleC.h simpleS.cpp simpleC.cpp
OBJS_DEPEND_ON_GENERATED = 1
## More than one file is generated by the command and therefore
## it can not be run in parallel.  Unfortunately, there is no way to
## say that only this rule can't be run in parallel.  However, we can
## determine if the generated files have already been generated.  If that's
## the case, then we don't need this special rule.
ifeq ($(wildcard $(GENERATED_DIRTY)), $(GENERATED_DIRTY))
  ## If we can find /bin/test, then we will continue
  ifneq ($(TEST_EXE),)
    ## If all of the generated files are there, then we need to check
    ## and make sure that the generated files are up-to-date.  If they are not
    ## then we need the special rule.
    ifeq ($(shell $(TEST_EXE) "simple.idl" -nt "simpleC.inl" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simpleS.h" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simpleC.h" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simpleS.cpp" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simpleC.cpp" 2> /dev/null || echo 0),)
      .NOTPARALLEL:

    else
      ## By this point, all of the generated files are here and up-to-date
      ## with respect to the source file.  Now we need to make sure that
      ## they are up-to-date with respect to the generation tool.  If the tool
      ## is newer than the generated files, then we need the special rule.
      ifeq ($(shell $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "simpleC.inl" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "simpleS.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "simpleC.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "simpleS.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "simpleC.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "simpleC.inl" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "simpleS.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "simpleC.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "simpleS.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "simpleC.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "simpleC.inl" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "simpleS.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "simpleC.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "simpleS.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "simpleC.cpp" 2> /dev/null || echo 0),)
        .NOTPARALLEL:
      endif
    endif
  else
    .NOTPARALLEL:
  endif
else
.NOTPARALLEL:
endif
simpleC.inl simpleS.h simpleC.h simpleS.cpp simpleC.cpp: simple.idl $(subst $(SPACE),\$(SPACE),$(call ADD_ARCH,$(TAO_IDL_DEP)))
	$(if $(findstring ",$(TAO_IDL)),$(TAO_IDL),$(call ADD_QUOTE,$(call ADD_ARCH,$(TAO_IDL)))) $(TAO_IDLFLAGS) -Sa -St -DUSE_LOCAL simple.idl


ifneq ($(static_libs_only),1)
ifneq ($(CROSS-COMPILE),1)
simpleC.inl simpleS.h simpleC.h simpleS.cpp simpleC.cpp: $(subst $(SPACE),\$(SPACE),$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))) $(subst $(SPACE),\$(SPACE),$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT)))
endif
endif

GENERATED_DIRTY += classes/simple/TestTypedefHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestTypedefHelper.class: simple/TestTypedefHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestTypedefHelper.java


GENERATED_DIRTY += classes/simple/StringTypedefHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/StringTypedefHelper.class: simple/StringTypedefHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/StringTypedefHelper.java


GENERATED_DIRTY += classes/simple/TestSeqTypedefHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestSeqTypedefHolder.class: simple/TestSeqTypedefHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestSeqTypedefHolder.java


GENERATED_DIRTY += classes/simple/TestSeqTypedefHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestSeqTypedefHelper.class: simple/TestSeqTypedefHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestSeqTypedefHelper.java


GENERATED_DIRTY += classes/simple/SeqOfTypedefedLongHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/SeqOfTypedefedLongHolder.class: simple/SeqOfTypedefedLongHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/SeqOfTypedefedLongHolder.java


GENERATED_DIRTY += classes/simple/SeqOfTypedefedLongHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/SeqOfTypedefedLongHelper.class: simple/SeqOfTypedefedLongHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/SeqOfTypedefedLongHelper.java


GENERATED_DIRTY += classes/simple/StringSeqHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/StringSeqHolder.class: simple/StringSeqHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/StringSeqHolder.java


GENERATED_DIRTY += classes/simple/StringSeqHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/StringSeqHelper.class: simple/StringSeqHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/StringSeqHelper.java


GENERATED_DIRTY += classes/simple/ArrayBounds.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/ArrayBounds.class: simple/ArrayBounds.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/ArrayBounds.java


GENERATED_DIRTY += classes/simple/TestArrayTypedefHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestArrayTypedefHolder.class: simple/TestArrayTypedefHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestArrayTypedefHolder.java


GENERATED_DIRTY += classes/simple/TestArrayTypedefHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestArrayTypedefHelper.class: simple/TestArrayTypedefHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestArrayTypedefHelper.java


GENERATED_DIRTY += classes/simple/TestArrayTypedef2Helper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestArrayTypedef2Helper.class: simple/TestArrayTypedef2Helper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestArrayTypedef2Helper.java


GENERATED_DIRTY += classes/simple/TestStringArrayHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestStringArrayHolder.class: simple/TestStringArrayHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestStringArrayHolder.java


GENERATED_DIRTY += classes/simple/TestStringArrayHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestStringArrayHelper.class: simple/TestStringArrayHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestStringArrayHelper.java


GENERATED_DIRTY += classes/simple/StringSeqSeqHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/StringSeqSeqHolder.class: simple/StringSeqSeqHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/StringSeqSeqHolder.java


GENERATED_DIRTY += classes/simple/StringSeqSeqHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/StringSeqSeqHelper.class: simple/StringSeqSeqHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/StringSeqSeqHelper.java


GENERATED_DIRTY += classes/simple/StringSeqSeqSeqHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/StringSeqSeqSeqHolder.class: simple/StringSeqSeqSeqHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/StringSeqSeqSeqHolder.java


GENERATED_DIRTY += classes/simple/StringSeqSeqSeqHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/StringSeqSeqSeqHelper.class: simple/StringSeqSeqSeqHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/StringSeqSeqSeqHelper.java


GENERATED_DIRTY += classes/simple/LongSeqSeqHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/LongSeqSeqHolder.class: simple/LongSeqSeqHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/LongSeqSeqHolder.java


GENERATED_DIRTY += classes/simple/LongSeqSeqHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/LongSeqSeqHelper.class: simple/LongSeqSeqHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/LongSeqSeqHelper.java


GENERATED_DIRTY += classes/simple/LongSeqSeqSeqHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/LongSeqSeqSeqHolder.class: simple/LongSeqSeqSeqHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/LongSeqSeqSeqHolder.java


GENERATED_DIRTY += classes/simple/LongSeqSeqSeqHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/LongSeqSeqSeqHelper.class: simple/LongSeqSeqSeqHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/LongSeqSeqSeqHelper.java


GENERATED_DIRTY += classes/simple/TestStruct.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestStruct.class: simple/TestStruct.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestStruct.java


GENERATED_DIRTY += classes/simple/TestStructHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestStructHolder.class: simple/TestStructHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestStructHolder.java


GENERATED_DIRTY += classes/simple/TestStructHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestStructHelper.class: simple/TestStructHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestStructHelper.java


GENERATED_DIRTY += classes/simple/TestStructSequenceHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestStructSequenceHolder.class: simple/TestStructSequenceHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestStructSequenceHolder.java


GENERATED_DIRTY += classes/simple/TestStructSequenceHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestStructSequenceHelper.class: simple/TestStructSequenceHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestStructSequenceHelper.java


GENERATED_DIRTY += classes/simple/TestStructArrayHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestStructArrayHolder.class: simple/TestStructArrayHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestStructArrayHolder.java


GENERATED_DIRTY += classes/simple/TestStructArrayHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestStructArrayHelper.class: simple/TestStructArrayHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestStructArrayHelper.java


GENERATED_DIRTY += classes/simple/TestNestedStruct.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestNestedStruct.class: simple/TestNestedStruct.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestNestedStruct.java


GENERATED_DIRTY += classes/simple/TestNestedStructHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestNestedStructHolder.class: simple/TestNestedStructHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestNestedStructHolder.java


GENERATED_DIRTY += classes/simple/TestNestedStructHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestNestedStructHelper.class: simple/TestNestedStructHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestNestedStructHelper.java


GENERATED_DIRTY += classes/simple/TestConstLong.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestConstLong.class: simple/TestConstLong.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestConstLong.java


GENERATED_DIRTY += classes/simple/TIMESTAMP_INVALID_NSEC.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TIMESTAMP_INVALID_NSEC.class: simple/TIMESTAMP_INVALID_NSEC.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TIMESTAMP_INVALID_NSEC.java


GENERATED_DIRTY += classes/simple/TestConstFloat.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestConstFloat.class: simple/TestConstFloat.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestConstFloat.java


GENERATED_DIRTY += classes/simple/TestConstDouble.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestConstDouble.class: simple/TestConstDouble.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestConstDouble.java


GENERATED_DIRTY += classes/simple/TestConstBool.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestConstBool.class: simple/TestConstBool.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestConstBool.java


GENERATED_DIRTY += classes/simple/TestConstString.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestConstString.class: simple/TestConstString.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestConstString.java


GENERATED_DIRTY += classes/simple/TestConstTypedef.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestConstTypedef.class: simple/TestConstTypedef.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestConstTypedef.java


GENERATED_DIRTY += classes/simple/TestConstChar.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestConstChar.class: simple/TestConstChar.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestConstChar.java


GENERATED_DIRTY += classes/simple/TestConstWchar.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestConstWchar.class: simple/TestConstWchar.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestConstWchar.java


GENERATED_DIRTY += classes/simple/TestEnum.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestEnum.class: simple/TestEnum.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestEnum.java


GENERATED_DIRTY += classes/simple/TestEnumHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestEnumHolder.class: simple/TestEnumHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestEnumHolder.java


GENERATED_DIRTY += classes/simple/TestEnumHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestEnumHelper.class: simple/TestEnumHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestEnumHelper.java


GENERATED_DIRTY += classes/simple/TestUnion1.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion1.class: simple/TestUnion1.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion1.java


GENERATED_DIRTY += classes/simple/TestUnion1Holder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion1Holder.class: simple/TestUnion1Holder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion1Holder.java


GENERATED_DIRTY += classes/simple/TestUnion1Helper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion1Helper.class: simple/TestUnion1Helper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion1Helper.java


GENERATED_DIRTY += classes/simple/TestUnion2.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion2.class: simple/TestUnion2.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion2.java


GENERATED_DIRTY += classes/simple/TestUnion2Holder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion2Holder.class: simple/TestUnion2Holder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion2Holder.java


GENERATED_DIRTY += classes/simple/TestUnion2Helper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion2Helper.class: simple/TestUnion2Helper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion2Helper.java


GENERATED_DIRTY += classes/simple/TestUnion4.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion4.class: simple/TestUnion4.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion4.java


GENERATED_DIRTY += classes/simple/TestUnion4Holder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion4Holder.class: simple/TestUnion4Holder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion4Holder.java


GENERATED_DIRTY += classes/simple/TestUnion4Helper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion4Helper.class: simple/TestUnion4Helper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion4Helper.java


GENERATED_DIRTY += classes/simple/EnumSeqHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/EnumSeqHolder.class: simple/EnumSeqHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/EnumSeqHolder.java


GENERATED_DIRTY += classes/simple/EnumSeqHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/EnumSeqHelper.class: simple/EnumSeqHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/EnumSeqHelper.java


GENERATED_DIRTY += classes/simple/EnumArrayHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/EnumArrayHolder.class: simple/EnumArrayHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/EnumArrayHolder.java


GENERATED_DIRTY += classes/simple/EnumArrayHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/EnumArrayHelper.class: simple/EnumArrayHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/EnumArrayHelper.java


GENERATED_DIRTY += classes/simple/TestStructWithEnum.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestStructWithEnum.class: simple/TestStructWithEnum.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestStructWithEnum.java


GENERATED_DIRTY += classes/simple/TestStructWithEnumHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestStructWithEnumHolder.class: simple/TestStructWithEnumHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestStructWithEnumHolder.java


GENERATED_DIRTY += classes/simple/TestStructWithEnumHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestStructWithEnumHelper.class: simple/TestStructWithEnumHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestStructWithEnumHelper.java


GENERATED_DIRTY += classes/simple/TestInterf.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestInterf.class: simple/TestInterf.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestInterf.java


GENERATED_DIRTY += classes/simple/TestInterfHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestInterfHolder.class: simple/TestInterfHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestInterfHolder.java


GENERATED_DIRTY += classes/simple/TestInterfHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestInterfHelper.class: simple/TestInterfHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestInterfHelper.java


GENERATED_DIRTY += classes/simple/TestInterfOperations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestInterfOperations.class: simple/TestInterfOperations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestInterfOperations.java


GENERATED_DIRTY += classes/simple/_TestInterfStub.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/_TestInterfStub.class: simple/_TestInterfStub.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/_TestInterfStub.java


GENERATED_DIRTY += classes/simple/TestUnion2SeqHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion2SeqHolder.class: simple/TestUnion2SeqHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion2SeqHolder.java


GENERATED_DIRTY += classes/simple/TestUnion2SeqHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion2SeqHelper.class: simple/TestUnion2SeqHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion2SeqHelper.java


GENERATED_DIRTY += classes/simple/TestUnion3.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion3.class: simple/TestUnion3.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion3.java


GENERATED_DIRTY += classes/simple/TestUnion3Holder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion3Holder.class: simple/TestUnion3Holder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion3Holder.java


GENERATED_DIRTY += classes/simple/TestUnion3Helper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestUnion3Helper.class: simple/TestUnion3Helper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestUnion3Helper.java


GENERATED_DIRTY += classes/simple/TestInterf2.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestInterf2.class: simple/TestInterf2.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestInterf2.java


GENERATED_DIRTY += classes/simple/TestInterf2Holder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestInterf2Holder.class: simple/TestInterf2Holder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestInterf2Holder.java


GENERATED_DIRTY += classes/simple/TestInterf2Helper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestInterf2Helper.class: simple/TestInterf2Helper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestInterf2Helper.java


GENERATED_DIRTY += classes/simple/TestInterf2Operations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestInterf2Operations.class: simple/TestInterf2Operations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestInterf2Operations.java


GENERATED_DIRTY += classes/simple/_TestInterf2Stub.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/_TestInterf2Stub.class: simple/_TestInterf2Stub.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/_TestInterf2Stub.java


GENERATED_DIRTY += classes/simple/TestInterf3.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestInterf3.class: simple/TestInterf3.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestInterf3.java


GENERATED_DIRTY += classes/simple/TestInterf3Holder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestInterf3Holder.class: simple/TestInterf3Holder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestInterf3Holder.java


GENERATED_DIRTY += classes/simple/TestInterf3Helper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestInterf3Helper.class: simple/TestInterf3Helper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestInterf3Helper.java


GENERATED_DIRTY += classes/simple/TestInterf3Operations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestInterf3Operations.class: simple/TestInterf3Operations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestInterf3Operations.java


GENERATED_DIRTY += classes/simple/_TestInterf3Stub.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/_TestInterf3Stub.class: simple/_TestInterf3Stub.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/_TestInterf3Stub.java


GENERATED_DIRTY += classes/simple/TestLI.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestLI.class: simple/TestLI.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestLI.java


GENERATED_DIRTY += classes/simple/TestLIHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestLIHolder.class: simple/TestLIHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestLIHolder.java


GENERATED_DIRTY += classes/simple/TestLIHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestLIHelper.class: simple/TestLIHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestLIHelper.java


GENERATED_DIRTY += classes/simple/TestLIOperations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/TestLIOperations.class: simple/TestLIOperations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/TestLIOperations.java


GENERATED_DIRTY += classes/simple/_TestLILocalBase.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/_TestLILocalBase.class: simple/_TestLILocalBase.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/_TestLILocalBase.java


GENERATED_DIRTY += classes/simple/_TestLITAOPeer.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/_TestLITAOPeer.class: simple/_TestLITAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/_TestLITAOPeer.java


GENERATED_DIRTY += classes/simple/Local2.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/Local2.class: simple/Local2.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/Local2.java


GENERATED_DIRTY += classes/simple/Local2Holder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/Local2Holder.class: simple/Local2Holder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/Local2Holder.java


GENERATED_DIRTY += classes/simple/Local2Helper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/Local2Helper.class: simple/Local2Helper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/Local2Helper.java


GENERATED_DIRTY += classes/simple/Local2Operations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/Local2Operations.class: simple/Local2Operations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/Local2Operations.java


GENERATED_DIRTY += classes/simple/_Local2LocalBase.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/_Local2LocalBase.class: simple/_Local2LocalBase.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/_Local2LocalBase.java


GENERATED_DIRTY += classes/simple/_Local2TAOPeer.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/_Local2TAOPeer.class: simple/_Local2TAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/_Local2TAOPeer.java


GENERATED_DIRTY += classes/simple/Local2SeqHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/Local2SeqHolder.class: simple/Local2SeqHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/Local2SeqHolder.java


GENERATED_DIRTY += classes/simple/Local2SeqHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/Local2SeqHelper.class: simple/Local2SeqHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/Local2SeqHelper.java


GENERATED_DIRTY += classes/simple/StructWithObjref.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/StructWithObjref.class: simple/StructWithObjref.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/StructWithObjref.java


GENERATED_DIRTY += classes/simple/StructWithObjrefHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/StructWithObjrefHolder.class: simple/StructWithObjrefHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/StructWithObjrefHolder.java


GENERATED_DIRTY += classes/simple/StructWithObjrefHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/StructWithObjrefHelper.class: simple/StructWithObjrefHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/StructWithObjrefHelper.java


GENERATED_DIRTY += classes/simple/Local3.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/Local3.class: simple/Local3.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/Local3.java


GENERATED_DIRTY += classes/simple/Local3Holder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/Local3Holder.class: simple/Local3Holder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/Local3Holder.java


GENERATED_DIRTY += classes/simple/Local3Helper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/Local3Helper.class: simple/Local3Helper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/Local3Helper.java


GENERATED_DIRTY += classes/simple/Local3Operations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/Local3Operations.class: simple/Local3Operations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/Local3Operations.java


GENERATED_DIRTY += classes/simple/_Local3LocalBase.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/_Local3LocalBase.class: simple/_Local3LocalBase.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/_Local3LocalBase.java


GENERATED_DIRTY += classes/simple/_Local3TAOPeer.class
OBJS_DEPEND_ON_GENERATED = 1
classes/simple/_Local3TAOPeer.class: simple/_Local3TAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) ../../../../java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -classpath ../../../../lib/i2jrt.jar simple/_Local3TAOPeer.java


DYLD_LIBRARY_PATH := $(DYLD_LIBRARY_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
LD_LIBRARY_PATH   := $(LD_LIBRARY_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
SHLIB_PATH        := $(SHLIB_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
LIBPATH           := $(LIBPATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
PATH              := $(PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))

GENERATED_DIRTY += simple/TestTypedefHelper.java simple/StringTypedefHelper.java simple/TestSeqTypedefHolder.java simple/TestSeqTypedefHelper.java simple/SeqOfTypedefedLongHolder.java simple/SeqOfTypedefedLongHelper.java simple/StringSeqHolder.java simple/StringSeqHelper.java simple/ArrayBounds.java simple/TestArrayTypedefHolder.java simple/TestArrayTypedefHelper.java simple/TestArrayTypedef2Helper.java simple/TestStringArrayHolder.java simple/TestStringArrayHelper.java simple/StringSeqSeqHolder.java simple/StringSeqSeqHelper.java simple/StringSeqSeqSeqHolder.java simple/StringSeqSeqSeqHelper.java simple/LongSeqSeqHolder.java simple/LongSeqSeqHelper.java simple/LongSeqSeqSeqHolder.java simple/LongSeqSeqSeqHelper.java simple/TestStruct.java simple/TestStructHolder.java simple/TestStructHelper.java simple/TestStructSequenceHolder.java simple/TestStructSequenceHelper.java simple/TestStructArrayHolder.java simple/TestStructArrayHelper.java simple/TestNestedStruct.java simple/TestNestedStructHolder.java simple/TestNestedStructHelper.java simple/TestConstLong.java simple/TIMESTAMP_INVALID_NSEC.java simple/TestConstFloat.java simple/TestConstDouble.java simple/TestConstBool.java simple/TestConstString.java simple/TestConstTypedef.java simple/TestConstChar.java simple/TestConstWchar.java simple/TestEnum.java simple/TestEnumHolder.java simple/TestEnumHelper.java simple/TestUnion1.java simple/TestUnion1Holder.java simple/TestUnion1Helper.java simple/TestUnion2.java simple/TestUnion2Holder.java simple/TestUnion2Helper.java simple/TestUnion4.java simple/TestUnion4Holder.java simple/TestUnion4Helper.java simple/EnumSeqHolder.java simple/EnumSeqHelper.java simple/EnumArrayHolder.java simple/EnumArrayHelper.java simple/TestStructWithEnum.java simple/TestStructWithEnumHolder.java simple/TestStructWithEnumHelper.java simple/TestInterf.java simple/TestInterfHolder.java simple/TestInterfHelper.java simple/TestInterfOperations.java simple/_TestInterfStub.java simple/TestUnion2SeqHolder.java simple/TestUnion2SeqHelper.java simple/TestUnion3.java simple/TestUnion3Holder.java simple/TestUnion3Helper.java simple/TestInterf2.java simple/TestInterf2Holder.java simple/TestInterf2Helper.java simple/TestInterf2Operations.java simple/_TestInterf2Stub.java simple/TestInterf3.java simple/TestInterf3Holder.java simple/TestInterf3Helper.java simple/TestInterf3Operations.java simple/_TestInterf3Stub.java simple/TestLI.java simple/TestLIHolder.java simple/TestLIHelper.java simple/TestLIOperations.java simple/_TestLILocalBase.java simple/_TestLITAOPeer.java simple/Local2.java simple/Local2Holder.java simple/Local2Helper.java simple/Local2Operations.java simple/_Local2LocalBase.java simple/_Local2TAOPeer.java simple/Local2SeqHolder.java simple/Local2SeqHelper.java simple/StructWithObjref.java simple/StructWithObjrefHolder.java simple/StructWithObjrefHelper.java simple/Local3.java simple/Local3Holder.java simple/Local3Helper.java simple/Local3Operations.java simple/_Local3LocalBase.java simple/_Local3TAOPeer.java simpleJC.h simpleJS.h simpleJC.cpp simpleJS.cpp
OBJS_DEPEND_ON_GENERATED = 1
## More than one file is generated by the command and therefore
## it can not be run in parallel.  Unfortunately, there is no way to
## say that only this rule can't be run in parallel.  However, we can
## determine if the generated files have already been generated.  If that's
## the case, then we don't need this special rule.
ifeq ($(wildcard $(GENERATED_DIRTY)), $(GENERATED_DIRTY))
  ## If we can find /bin/test, then we will continue
  ifneq ($(TEST_EXE),)
    ## If all of the generated files are there, then we need to check
    ## and make sure that the generated files are up-to-date.  If they are not
    ## then we need the special rule.
    ifeq ($(shell $(TEST_EXE) "simple.idl" -nt "simple/TestTypedefHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/StringTypedefHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestSeqTypedefHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestSeqTypedefHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/SeqOfTypedefedLongHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/SeqOfTypedefedLongHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/StringSeqHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/StringSeqHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/ArrayBounds.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestArrayTypedefHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestArrayTypedefHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestArrayTypedef2Helper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestStringArrayHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestStringArrayHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/StringSeqSeqHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/StringSeqSeqHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/StringSeqSeqSeqHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/StringSeqSeqSeqHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/LongSeqSeqHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/LongSeqSeqHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/LongSeqSeqSeqHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/LongSeqSeqSeqHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestStruct.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestStructHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestStructHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestStructSequenceHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestStructSequenceHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestStructArrayHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestStructArrayHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestNestedStruct.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestNestedStructHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestNestedStructHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestConstLong.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TIMESTAMP_INVALID_NSEC.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestConstFloat.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestConstDouble.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestConstBool.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestConstString.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestConstTypedef.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestConstChar.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestConstWchar.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestEnum.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestEnumHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestEnumHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion1.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion1Holder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion1Helper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion2.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion2Holder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion2Helper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion4.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion4Holder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion4Helper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/EnumSeqHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/EnumSeqHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/EnumArrayHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/EnumArrayHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestStructWithEnum.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestStructWithEnumHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestStructWithEnumHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestInterf.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestInterfHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestInterfHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestInterfOperations.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/_TestInterfStub.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion2SeqHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion2SeqHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion3.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion3Holder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestUnion3Helper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestInterf2.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestInterf2Holder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestInterf2Helper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestInterf2Operations.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/_TestInterf2Stub.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestInterf3.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestInterf3Holder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestInterf3Helper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestInterf3Operations.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/_TestInterf3Stub.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestLI.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestLIHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestLIHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/TestLIOperations.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/_TestLILocalBase.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/_TestLITAOPeer.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/Local2.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/Local2Holder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/Local2Helper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/Local2Operations.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/_Local2LocalBase.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/_Local2TAOPeer.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/Local2SeqHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/Local2SeqHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/StructWithObjref.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/StructWithObjrefHolder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/StructWithObjrefHelper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/Local3.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/Local3Holder.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/Local3Helper.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/Local3Operations.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/_Local3LocalBase.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simple/_Local3TAOPeer.java" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simpleJC.h" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simpleJS.h" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simpleJC.cpp" 2> /dev/null || $(TEST_EXE) "simple.idl" -nt "simpleJS.cpp" 2> /dev/null || echo 0),)
      .NOTPARALLEL:

    else
      ## By this point, all of the generated files are here and up-to-date
      ## with respect to the source file.  Now we need to make sure that
      ## they are up-to-date with respect to the generation tool.  If the tool
      ## is newer than the generated files, then we need the special rule.
      ifeq ($(shell $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestTypedefHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/StringTypedefHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestSeqTypedefHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestSeqTypedefHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/SeqOfTypedefedLongHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/SeqOfTypedefedLongHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/StringSeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/StringSeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/ArrayBounds.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestArrayTypedefHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestArrayTypedefHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestArrayTypedef2Helper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestStringArrayHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestStringArrayHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/StringSeqSeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/StringSeqSeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/StringSeqSeqSeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/StringSeqSeqSeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/LongSeqSeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/LongSeqSeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/LongSeqSeqSeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/LongSeqSeqSeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestStruct.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestStructHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestStructHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestStructSequenceHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestStructSequenceHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestStructArrayHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestStructArrayHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestNestedStruct.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestNestedStructHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestNestedStructHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestConstLong.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TIMESTAMP_INVALID_NSEC.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestConstFloat.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestConstDouble.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestConstBool.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestConstString.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestConstTypedef.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestConstChar.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestConstWchar.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestEnum.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestEnumHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestEnumHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion1.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion1Holder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion1Helper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion2.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion2Holder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion2Helper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion4.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion4Holder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion4Helper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/EnumSeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/EnumSeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/EnumArrayHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/EnumArrayHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestStructWithEnum.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestStructWithEnumHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestStructWithEnumHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestInterf.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestInterfHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestInterfHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestInterfOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/_TestInterfStub.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion2SeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion2SeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion3.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion3Holder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestUnion3Helper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestInterf2.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestInterf2Holder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestInterf2Helper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestInterf2Operations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/_TestInterf2Stub.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestInterf3.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestInterf3Holder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestInterf3Helper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestInterf3Operations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/_TestInterf3Stub.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestLI.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestLIHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestLIHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/TestLIOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/_TestLILocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/_TestLITAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/Local2.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/Local2Holder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/Local2Helper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/Local2Operations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/_Local2LocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/_Local2TAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/Local2SeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/Local2SeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/StructWithObjref.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/StructWithObjrefHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/StructWithObjrefHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/Local3.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/Local3Holder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/Local3Helper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/Local3Operations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/_Local3LocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simple/_Local3TAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simpleJC.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simpleJS.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simpleJC.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,../../../../bin/idl2jni)" -nt "simpleJS.cpp" 2> /dev/null || echo 0),)
        .NOTPARALLEL:
      endif
    endif
  else
    .NOTPARALLEL:
  endif
else
.NOTPARALLEL:
endif
simple/TestTypedefHelper.java simple/StringTypedefHelper.java simple/TestSeqTypedefHolder.java simple/TestSeqTypedefHelper.java simple/SeqOfTypedefedLongHolder.java simple/SeqOfTypedefedLongHelper.java simple/StringSeqHolder.java simple/StringSeqHelper.java simple/ArrayBounds.java simple/TestArrayTypedefHolder.java simple/TestArrayTypedefHelper.java simple/TestArrayTypedef2Helper.java simple/TestStringArrayHolder.java simple/TestStringArrayHelper.java simple/StringSeqSeqHolder.java simple/StringSeqSeqHelper.java simple/StringSeqSeqSeqHolder.java simple/StringSeqSeqSeqHelper.java simple/LongSeqSeqHolder.java simple/LongSeqSeqHelper.java simple/LongSeqSeqSeqHolder.java simple/LongSeqSeqSeqHelper.java simple/TestStruct.java simple/TestStructHolder.java simple/TestStructHelper.java simple/TestStructSequenceHolder.java simple/TestStructSequenceHelper.java simple/TestStructArrayHolder.java simple/TestStructArrayHelper.java simple/TestNestedStruct.java simple/TestNestedStructHolder.java simple/TestNestedStructHelper.java simple/TestConstLong.java simple/TIMESTAMP_INVALID_NSEC.java simple/TestConstFloat.java simple/TestConstDouble.java simple/TestConstBool.java simple/TestConstString.java simple/TestConstTypedef.java simple/TestConstChar.java simple/TestConstWchar.java simple/TestEnum.java simple/TestEnumHolder.java simple/TestEnumHelper.java simple/TestUnion1.java simple/TestUnion1Holder.java simple/TestUnion1Helper.java simple/TestUnion2.java simple/TestUnion2Holder.java simple/TestUnion2Helper.java simple/TestUnion4.java simple/TestUnion4Holder.java simple/TestUnion4Helper.java simple/EnumSeqHolder.java simple/EnumSeqHelper.java simple/EnumArrayHolder.java simple/EnumArrayHelper.java simple/TestStructWithEnum.java simple/TestStructWithEnumHolder.java simple/TestStructWithEnumHelper.java simple/TestInterf.java simple/TestInterfHolder.java simple/TestInterfHelper.java simple/TestInterfOperations.java simple/_TestInterfStub.java simple/TestUnion2SeqHolder.java simple/TestUnion2SeqHelper.java simple/TestUnion3.java simple/TestUnion3Holder.java simple/TestUnion3Helper.java simple/TestInterf2.java simple/TestInterf2Holder.java simple/TestInterf2Helper.java simple/TestInterf2Operations.java simple/_TestInterf2Stub.java simple/TestInterf3.java simple/TestInterf3Holder.java simple/TestInterf3Helper.java simple/TestInterf3Operations.java simple/_TestInterf3Stub.java simple/TestLI.java simple/TestLIHolder.java simple/TestLIHelper.java simple/TestLIOperations.java simple/_TestLILocalBase.java simple/_TestLITAOPeer.java simple/Local2.java simple/Local2Holder.java simple/Local2Helper.java simple/Local2Operations.java simple/_Local2LocalBase.java simple/_Local2TAOPeer.java simple/Local2SeqHolder.java simple/Local2SeqHelper.java simple/StructWithObjref.java simple/StructWithObjrefHolder.java simple/StructWithObjrefHelper.java simple/Local3.java simple/Local3Holder.java simple/Local3Helper.java simple/Local3Operations.java simple/_Local3LocalBase.java simple/_Local3TAOPeer.java simpleJC.h simpleJS.h simpleJC.cpp simpleJS.cpp: simple.idl $(call ADD_ARCH,../../../../bin/idl2jni)
	$(if $(findstring ",../../../../bin/idl2jni),../../../../bin/idl2jni,$(call ADD_QUOTE,$(call ADD_ARCH,../../../../bin/idl2jni))) -Wb,native_lib_name=idl2jni_test_simple -DUSE_LOCAL simple.idl


ifneq ($(GENERATED_DIRTY),)
.PRECIOUS: $(GENERATED_DIRTY)
## If the generated files are anything but source files, we need to
## ensure that those files are generated before we attempt to build anything
## else.
ifeq ($(OBJS_DEPEND_ON_GENERATED),1)
$(VDIR)$(ACE_PCH_FILE) $(addprefix $(VDIR), $(OBJS)): $(GENERATED_DIRTY)
$(VSHDIR)$(ACE_PCH_FILE) $(VSHOBJS): $(GENERATED_DIRTY)
endif
endif

ADDITIONAL_IDL_TARGETS += simple$(IDL_CLIENT_HDR_EXT)
idl_stubs: $(ADDITIONAL_IDL_TARGETS)

# This assignment forces make to run the idl_stubs
# target before building any of the source files.
FORCED_IDL_STUBS = simpleJC.cpp simpleJS.cpp simpleS.cpp simpleC.cpp  
FORCED_IDL_STUBS := $(FORCED_IDL_STUBS:simpleS.cpp=)
FORCED_IDL_STUBS := $(FORCED_IDL_STUBS:simpleC.cpp=)
FORCED_IDL_STUBS := $(FORCED_IDL_STUBS:simpleJC.cpp=)
FORCED_IDL_STUBS := $(FORCED_IDL_STUBS:simpleJS.cpp=)

ifneq ($(FORCED_IDL_STUBS),)
$(FORCED_IDL_STUBS): idl_stubs
endif

incremental_depend_idl::
	@$(RM) $(IDL_DEPENDENCY_FILE1)_idl.old
	@cp $(IDL_DEPENDENCY_FILE1) $(IDL_DEPENDENCY_FILE1)_idl.old
	$(DEPGEN_ENV) $(DEPGEN) -A $(DEPEND_CMD_ARGS) -f $(IDL_DEPENDENCY_FILE1) \
	$(IDL_DEPS_FLAGS1) -t gnuidl -DMAKEDEPEND $(IDL_DEPS1)
	@if cmp -s $(IDL_DEPENDENCY_FILE1) $(IDL_DEPENDENCY_FILE1)_idl.old ;\
	then echo "GNUmakefile idl dependencies unchanged for $(IDL_DEPS1)." ;\
	else \
		echo "GNUmakefile idl dependencies updated for $(IDL_DEPS1)." ;\
	fi ;\
	$(RM) $(IDL_DEPENDENCY_FILE1)_idl.old ;

realclean: clean
ifneq ($(GENERATED_DIRTY),)
	-$(RM) -r $(GENERATED_DIRTY)
endif
	-rm -rf classes ; rm -rf ./simple.jar ; rm -rf simple

__prebuild__:
ifeq ($(java),1)
	@mkdir -p classes 2> /dev/null || cat /dev/null > /dev/null
endif

all: __postbuild__

__postbuild__: $(VLIBS)

__postbuild__:
ifeq ($(java),1)
	@"$(JAVA_HOME)/bin/jar" -cf ./simple.jar -C classes .
endif


.PHONY: install
install: __postbuild__
INSTALL_LIB ?= lib
ifneq ($(INSTALL_PREFIX),)
ifneq ($(install_rpath),0)
LDFLAGS += -Wl,-R$(INSTALL_PREFIX)/$(INSTALL_LIB) $(LD_RPATH_FLAGS)
endif
endif


