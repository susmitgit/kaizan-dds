/* DO NOT EDIT THIS FILE - it is machine generated */
#include "idl2jni_jni.h"
/* Header for class OpenDDS_DCPS_transport_TransportInst */

#ifndef _Included_OpenDDS_DCPS_transport_TransportInst
#define _Included_OpenDDS_DCPS_transport_TransportInst
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    _jni_fini
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_TransportInst__1jni_1fini
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    getName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_OpenDDS_DCPS_transport_TransportInst_getName
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    getQueueMessagesPerPool
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_OpenDDS_DCPS_transport_TransportInst_getQueueMessagesPerPool
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    setQueueMessagesPerPool
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_TransportInst_setQueueMessagesPerPool
  (JNIEnv *, jobject, jint);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    getQueueInitialPools
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_OpenDDS_DCPS_transport_TransportInst_getQueueInitialPools
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    setQueueInitialPools
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_TransportInst_setQueueInitialPools
  (JNIEnv *, jobject, jint);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    getMaxPacketSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_OpenDDS_DCPS_transport_TransportInst_getMaxPacketSize
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    setMaxPacketSize
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_TransportInst_setMaxPacketSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    getMaxSamplesPerPacket
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_OpenDDS_DCPS_transport_TransportInst_getMaxSamplesPerPacket
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    setMaxSamplesPerPacket
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_TransportInst_setMaxSamplesPerPacket
  (JNIEnv *, jobject, jint);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    getOptimumPacketSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_OpenDDS_DCPS_transport_TransportInst_getOptimumPacketSize
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    setOptimumPacketSize
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_TransportInst_setOptimumPacketSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    isThreadPerConnection
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_OpenDDS_DCPS_transport_TransportInst_isThreadPerConnection
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    setThreadPerConnection
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_TransportInst_setThreadPerConnection
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    getDatalinkReleaseDelay
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_OpenDDS_DCPS_transport_TransportInst_getDatalinkReleaseDelay
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    setDatalinkReleaseDelay
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_TransportInst_setDatalinkReleaseDelay
  (JNIEnv *, jobject, jint);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    getDatalinkControlChunks
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_OpenDDS_DCPS_transport_TransportInst_getDatalinkControlChunks
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_TransportInst
 * Method:    setDatalinkControlChunks
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_TransportInst_setDatalinkControlChunks
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
