/* DO NOT EDIT THIS FILE - it is machine generated */
#include "idl2jni_jni.h"
/* Header for class OpenDDS_DCPS_transport_MulticastInst */

#ifndef _Included_OpenDDS_DCPS_transport_MulticastInst
#define _Included_OpenDDS_DCPS_transport_MulticastInst
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getDefaultToIPv6
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getDefaultToIPv6
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setDefaultToIPv6
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setDefaultToIPv6
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getPortOffset
 * Signature: ()S
 */
JNIEXPORT jshort JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getPortOffset
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setPortOffset
 * Signature: (S)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setPortOffset
  (JNIEnv *, jobject, jshort);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getGroupAddress
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getGroupAddress
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setGroupAddress
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setGroupAddress
  (JNIEnv *, jobject, jstring);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getReliable
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getReliable
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setReliable
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setReliable
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getSynBackoff
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getSynBackoff
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setSynBackoff
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setSynBackoff
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getSynInterval
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getSynInterval
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setSynInterval
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setSynInterval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getSynTimeout
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getSynTimeout
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setSynTimeout
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setSynTimeout
  (JNIEnv *, jobject, jlong);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getNakDepth
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getNakDepth
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setNakDepth
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setNakDepth
  (JNIEnv *, jobject, jint);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getNakInterval
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getNakInterval
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setNakInterval
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setNakInterval
  (JNIEnv *, jobject, jlong);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getNakDelayInterval
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getNakDelayInterval
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setNakDelayInterval
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setNakDelayInterval
  (JNIEnv *, jobject, jint);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getNakMax
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getNakMax
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setNakMax
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setNakMax
  (JNIEnv *, jobject, jint);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getNakTimeout
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getNakTimeout
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setNakTimeout
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setNakTimeout
  (JNIEnv *, jobject, jlong);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getTimeToLive
 * Signature: ()B
 */
JNIEXPORT jbyte JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getTimeToLive
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setTimeToLive
 * Signature: (B)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setTimeToLive
  (JNIEnv *, jobject, jbyte);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    getRcvBufferSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_getRcvBufferSize
  (JNIEnv *, jobject);

/*
 * Class:     OpenDDS_DCPS_transport_MulticastInst
 * Method:    setRcvBufferSize
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_OpenDDS_DCPS_transport_MulticastInst_setRcvBufferSize
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
