#include "BooleanSeqJC.h"
#include "idl2jni_runtime.h"

/* Generated by ../../bin/idl2jni running on input file /mnt/openDDS/OpenDDS-3.8/ACE_wrappers/TAO/tao/BooleanSeq.pidl */


/* Begin MODULE: CORBA */



/* Begin TYPEDEF: BooleanSeq */

void copyToCxx (JNIEnv *jni, CORBA::BooleanSeq &target, jbooleanArray source)
{
  jbooleanArray arr = source;
  jsize len = jni->GetArrayLength (arr);
  target.length (len);
  jboolean *buf = jni->GetBooleanArrayElements (arr, 0);
  for (CORBA::ULong i = 0; i < static_cast<CORBA::ULong> (len); ++i)
    {
      target[i] = buf[i];
    }
  jni->ReleaseBooleanArrayElements (arr, buf, JNI_ABORT);
}

void copyToJava (JNIEnv *jni, jbooleanArray &target, const CORBA::BooleanSeq &source, bool createNewObject)
{
  jsize len = source.length ();
  jbooleanArray arr;
  if (!createNewObject && jni->GetArrayLength (target) != len) createNewObject = true;
  if (createNewObject)
    {
      arr = jni->NewBooleanArray (len);
    }
  else
    {
      arr = target;
    }
  jboolean *buf = jni->GetBooleanArrayElements (arr, 0);
  for (CORBA::ULong i = 0; i < static_cast<CORBA::ULong> (len); ++i)
    {
      buf[i] = source[i];
    }
  jni->ReleaseBooleanArrayElements (arr, buf, 0);
  target = arr;
}


/* End TYPEDEF: BooleanSeq */

/* End MODULE: CORBA */
